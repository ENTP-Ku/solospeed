1. Home.js
로그인 버튼이 있다. 그러나 로컬 스트로지에 jwt토큰이 있다면 로그인 버튼은 출력되지 않는다.
회원가입 버튼이 있다. 그러나 로컬 스트로지에 jwt토큰이 있다면 회원가입 버튼은 출력되지 않는다.
중고거래게시판버튼이 있다. 그러나 로컬 스트로지에 jwt토큰이 없다면 중고거래게시판 버튼은 출력되지 않는다.
로그아웃 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 로그아웃버튼은 출력되지 않는다.
자유게시판 버튼이 있다.
1대1문의 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 1대1문의 버튼은 출력되지 않는다.
채팅목록 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 채팅목록 버튼은 출력되지 않는다.
로그인버튼을 클릭하면 Login.js로 이동
회원가입버튼을 클릭하면 Register.js로 이동
중고거래게시판버튼을 클릭하면 Shop.js로 이동
로그아웃버튼을 클릭하면 로컬스트로지의 jwt토큰을 삭제한다
자유게시판 버튼을 클릭하면 Post.js로 이동
1대1문의 버튼을 클릭하면 jwt 토큰에서 사용자이름을 추출해서 그 값이 master인지 확인후
master라면 새 윈도우 화면으로 Chatlist.js로 이동
master가 아니라면 새 윈도우 화면으로 url에 master을 username=을 접두사로 표시하고 Chat.js로 이동
채팅목록 버튼을 클릭하면 새 윈도우 화면으로 Chatlist.js로 이동

2. Login.js
아이디 입력칸이 있다.
비밀번호 입력칸이 있다.
로그인 버튼이 있다.
회원가입 버튼이 있다.
홈 버튼이 있다.
로그인 버튼을 클릭할때
아이디 입력칸이 비어있다면 '아이디를 입력해주세요' alert출력.
비밀번호 입력칸이 비어있다면 '비밀번호를 입력해주세요' alert출력.
입력된 아이디 값이 users 테이블의 username칼럼에 있는지 확인해서
없다면 '존재하지않는 아이디입니다.' alert출력.
있다면 해당 레코드의 password칼럼의 값과 입력된 비밀번호 값이 일치하는지 확인해서
일치하지 않는다면 '비밀번호가 일치하지 않습니다.' alert출력
일치한다면 jwt토큰 생성하여 브라우저의 로컬스트로지에 저장하고 Home.js로 이동
회원가입 버튼을 클릭하면Register.js로 이동
홈 버튼을 클릭하면 Home.js로 이동

3. Register.js
홈 버튼이 있다.
아이디 입력칸이 있다.
비밀번호 입력칸이 있다.
비밀번호 확인 입력칸이 있다.
고유번호 입력칸이 있다.
가입 버튼이 있다.
홈버튼을 클릭하면 Home.js로 이동
가입 버튼을 클릭할때
입력된 아이디 값이 users테이블의 username칼럼에 이미 있다면 '중복된 아이디 입니다' alert출력.
입력된 비밀번호와 비밀번호확인값이 동일하지않다면 '비밀번호가 일치하지 않습니다.' alert출력.
입력된 고유번호 값이 users테이블의 uniquenumber칼럼에 이미 있다면 '이미 가입되어있는 회원입니다' alert출력.
위의 조건에 전부 해당되지 않는다면 users테이블에 하나의 레코드로 저장한다.
입력된 아이디값은 username칼럼에, 입력된 비밀번호값은 password칼럼에, 입력된 고유번호값은 uniquenumber칼럼에 저장후 '로그인 후 이용해주세요' alert출력.
Login.js로 이동


4. Upload.js
홈버튼이 있다.
목록으로 버튼이 있다.
상품이름 입력칸이 있다.
카테고리 select 폼이 있다.
상품가격 입력칸이 있다.
상품사진 첨부파일 등록칸이 있다.
등록 버튼이 있다.
홈버튼을 클릭하면 Home.js로 이동.
목록으로 버튼을 클릭하면 Shop.js로 이동.
카테고리 select폼을 펼치면 휴대기기, 의류, 식품 선택옵션이 있다.
등록 버튼을 클릭할때,
입력된 상품이름이 없다면, '상품이름을 입력해 주세요'alert출력.
선택한 카테고리가 없다면, '카테고리를 선택해 주세요' alert출력.
입력된 상품가격이 없다면, '가격을 입력해 주세요'alert출력.
선택된 첨부파일이 없다면, '사진을 등록해 주세요'alert출력.
위 조건에 전부 해당되지 않는다면
입력된 상품이름은 items테이블의 product_name칼럼에 저장한다.
선택된 카테고리는 items테이블의 category칼럼에 저장한다.
입력된 상품가격은 items테이블의 price칼럼에 저장한다.
jwt토큰에서 username을 추출해서 items테이블의 product_uploader칼럼에 저장한다.
첨부된 사진파일은 C:\Solo\demo\src\main\resources\static\images 에 절대경로로 저장하고 파일 위치를 찾을 수 있도록 items테이블의 images칼럼에 저장한다.
로컬 날짜와시간을 items테이블의 save_time칼럼에 저장한다.
Shop.js로 이동

5. Shop.js
홈 버튼이 있다.
상품등록 버튼이 있다. 그러나 로컬 스트로지에 jwt토큰이 있다면 상품등록 버튼은 출력되지 않는다.
로그아웃 버튼이 있다. 그러나 로컬 스트로지에 jwt토큰이 있다면 로그아웃 버튼은 출력되지 않는다.
전체상품 버튼이 있다.
휴대기기 버튼이 있다.
의류 버튼이 있다.
식품 버튼이 있다.
items테이블의 레코드들을 불러와서 페이지에 save_time칼럼 내림차순으로 5열로 출력한다
images칼럼의 경로에 있는 이미지, product_name칼럼의 내용, category칼럼의 내용, price칼럼의 내용, product_uploader칼럼의 내용을 한묶음으로 출력한다.
홈버튼을 클릭하면 Home.js로 이동.
상품등록 버튼을 클릭하면 Upload.js 로 이동.
로그아웃 버튼을 클릭하면 로컬 스트로지에 저장된 jwt토큰을 제거하고 Home.js로 이동.
전체상품 버튼을 클릭하면 items테이블의 모든 레코드를 출력한다.
휴대기기 버튼을 클릭하면 items테이블의 category 칼럼이 휴대기기인 레코드들을 출력한다.
의류 버튼을 클릭하면 items테이블의 category 칼럼이 의류인 레코드들을 출력한다.
식품 버튼을 클릭하면 items테이블의 category 칼럼이 식품인 레코드들을 출력한다.
상품목록의 사진을 클릭하면 url에 ID를 표시하며 Detail.js로 이동.

6. Detail.js
홈버튼이 있다.
목록으로 버튼이 있다.
url에 표시된 ID에 해당하는 레코드를 items테이블에서 가져와서 출력한다.
items테이블의 images칼럼의 경로에서 사진을 가져와서 출력한다.
items테이블의 product_name칼럼값을 출력한다
items테이블의 category칼럼값을 출력한다.
items테이블의 price칼럼값을 출력한다.
items테이블의 product_uploader칼럼값을 출력한다.
상품수량 선택폼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 상품수량 선택폼은 출력되지 않는다.
장바구니에 담기 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 장바구니에 담기 버튼은 출력되지 않는다.
주문하기 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 주문하기버튼은 출력되지 않는다.
판매자와 채팅하기 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 판매자와 채팅하기 버튼은 출력되지 않는다.
홈버튼을 클릭하면 Home.js로 이동
목록으로버튼을 클릭하면 Shop.js로 이동
장바구니에 담기 버튼을 클릭하면 cart테이블에 하나의 레코드로 저장한다.
items테이블의 images칼럼값을 cart 테이블의 images_in_cart 칼럼에 저장한다.
items테이블의 product_name칼럼값을 cart 테이블의 product_name_in_cart 칼럼에 저장한다
items테이블의 price칼럼값을 cart 테이블의 price_in_cart 칼럼에 저장한다.
jwt토큰에서 username을 추출한 값을 cart 테이블의 username_in_cart 칼럼에 저장한다.
'장바구니에 저장되었습니다.' alert출력
주문하기 버튼을 클릭하면 Order.js로 이동
채팅하기 버튼을 클릭하면 items테이블의 product_uploader칼럼값을 username=을 접두사로 url에 표시하며 Chat.js로 이동

7. Write.js
홈 버튼이 있다.
로그아웃 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 로그아웃버튼은 출력되지 않는다.
목록 버튼이 있다
제목 입력칸이 있다.
내용 입력칸이 있다.
등록 버튼이 있다.
홈버튼을 클릭하면 Home.js로 이동.
로그아웃 버튼을 클릭하면 로컬 스트로지에 저장된 jwt토큰을 제거하고 Home.js로 이동.
목록 버튼을 클릭하면 Post.js로 이동.
등록 버튼을 클릭하면,
입력된 제목값이 없으면 '제목을 입력해 주세요' alert출력
입력된 내용값이 없으면 '내용을 입력해 주세요' alert 출력
위 조건에 전부 해당하지 않는다면
입력된 제목값을 posts테이블의 title칼럼에 저장.
입력된 내용값을 posts테이블의 content칼럼에 저장.
jwt토큰에서 username을 추출해서 posts테이블의 username칼럼에 저장.
로컬 날짜와 시간을 posts테이블의 save_time칼럼에 저장.
Post.js로 이동

8. Post.js
홈 버튼이 있다.
로그아웃 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 로그아웃버튼은 출력되지 않는다.
글쓰기 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 글쓰기버튼은 출력되지 않는다.
posts 테이블의 레코드들이 save_time칼럼 내림차순으로 출력된다.
posts테이블의 title칼럼값을 출력하며 텍스트를 하이퍼화 하고 클릭하면 url에 ID값을 표시하며 PostDetail.js로 이동.
posts테이블의 username칼럼값을 출력한다.
posts테이블의 save_time칼럼값을 출력한다.
홈버튼을 클릭하면 Home.js로 이동.
로그아웃 버튼을 클릭하면 로컬 스트로지에 저장된 jwt토큰을 제거하고 Home.js로 이동.
글쓰기 버튼을 클릭하면 Write.js로 이동

9. PostDetail.js
홈 버튼이 있다.
목록 버튼이 있다
로그아웃 버튼이 있다. 그러나 로컬스트로지에 jwt토큰이 없다면 로그아웃버튼은 출력되지 않는다.
글삭제 버튼이 있다. 그러나 jwt토큰에서 추출한 username값과 url의 ID값에 해당하는 posts테이블의 레코드의 username 값이 일치하지 않는다면 출력되지 않는다.
posts테이블에서 url의 ID값에 해당하는 레코드의 title칼럼값 출력.
posts테이블에서 url의 ID값에 해당하는 레코드의 content칼럼값 출력.
posts테이블에서 url의 ID값에 해당하는 레코드의 username칼럼값 출력.
posts테이블에서 url의 ID값에 해당하는 레코드의 save_time칼럼값 출력.
홈버튼을 클릭하면 Home.js로 이동.
목록 버튼을 클릭하면 Post.js로 이동.
로그아웃 버튼을 클릭하면 로컬 스트로지에 저장된 jwt토큰을 제거하고 Home.js로 이동.
글삭제 버튼을 클릭하면 posts테이블에서 url의 ID값에 해당하는 레코드를 삭제하고 Post.js로 이동.

10. Chat.js
메시지 입력칸이 있다.
전송 버튼이 있다.
jwt토큰에서 추출한 username의 값이 chats테이블의 sender칼럼과 일치하며 url에 표시된 username의 값이 chats테이블의 receiver칼럼과 일치하는 레코드 전체
그리고
jwt토큰에서 추출한 username의 값이 chats테이블의 receiver칼럼과 일치하며 url에 표시된 username의 값이 chats테이블의 sender칼럼과 일치하는 레코드 전체
를 save_time칼럼 오름차순으로 정렬해서 chats테이블의 username칼럼값, message칼럼값, save_time 칼럼값 출력
전송 버튼을 클릭하면
jwt토큰에서 추출한 username의 값이 chats테이블의 sender칼럼에 저장된다.
url에 표시된 username의 값이 chats테이블의 receiver칼럼에 저장된다.
입력된 메시지값이 chats테이블의 message칼럼에 저장된다.

11. Chatlist.js
chats테이블에서 sender칼럼값 또는 receiver칼럼값이 jwt토큰에서 추출한 username과 일치하는 레코드를 전부 가져오고 chats테이블의 save_time칼럼 오름차순으로 정렬한 뒤 jwt토큰에서 추출한 username과 일치하는 sender칼럼값과 receiver칼럼값을 null로 만들어버리고 sender칼럽값과 receiver 칼럼값을 하이퍼화하고 chats테이블의 save_time칼럼과 함께 출력.
하이퍼 텍스트를 클릭하면 그 텍스트 내용의 username=을 접두사로 url에 표시하며 Chat.js로 이동

